// Generated by CoffeeScript 1.4.0
(function() {
  var Article, Storage, article, options, view, _i, _len, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  options = {
    "angel-hide-sport": true,
    "angel-hide-hider": true
  };

  Article = (function(_super) {

    __extends(Article, _super);

    function Article() {
      this.render = __bind(this.render, this);

      this.key = __bind(this.key, this);

      this.toggleHideState = __bind(this.toggleHideState, this);

      this.initialize = __bind(this.initialize, this);
      return Article.__super__.constructor.apply(this, arguments);
    }

    Article.prototype.initialize = function() {
      var hidden, wrapper,
        _this = this;
      wrapper = $('<div class="angel-wrapper"></div>');
      this.hider = $('<a href="#" >X</a>');
      this.$el.wrap(wrapper);
      this.$el.before(this.hider);
      hidden = !!Storage.get(this.key());
      if (hidden) {
        this.hider.click();
      }
      this.hider.click(this.toggleHideState);
      this.$('a').mousedown(function(evt) {
        Storage.set(_this.key(), true);
        return $(evt.target).click();
      });
      return this.render(hidden);
    };

    Article.prototype.toggleHideState = function(evt) {
      var hidden;
      hidden = !Storage.get(this.key());
      Storage.set(this.key(), hidden);
      this.render(hidden);
      return evt.preventDefault();
    };

    Article.prototype.key = function() {
      return "angel-" + this.$('a')[0].href;
    };

    Article.prototype.render = function(hidden) {
      this.$el.toggle(!hidden);
      if (options["angel-hide-hider"]) {
        return this.hider.toggle(!hidden);
      }
    };

    return Article;

  })(Backbone.View);

  Storage = {
    set: function(key, value) {
      try {
        return localStorage.setItem(key, value);
      } catch (error) {
        if (error.name === 'QUOTA_EXCEEDED_ERR') {
          localStorage.clear();
          return localStorage.setItem(key, value);
        } else {
          throw error;
        }
      }
    },
    get: function(key) {
      var value;
      value = localStorage.getItem(key);
      if (value === 'true') {
        return true;
      } else if (value === 'false') {
        return false;
      } else {
        return value;
      }
    },
    remove: function(key) {
      return localStorage.removeItem(key);
    }
  };

  _ref = $("li.inline-pic, li.pixie, li.mugshot, li.b3, li.wide-img, li.picture, li.l2, li.l5");
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    article = _ref[_i];
    view = new Article({
      el: article
    });
  }

  if (options["angel-hide-sport"]) {
    $("#sport-nwf-picks").hide();
  }

}).call(this);
