// Generated by CoffeeScript 1.4.0
(function() {
  var Article, article, view, _i, _len, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Article = (function(_super) {

    __extends(Article, _super);

    function Article() {
      this.render = __bind(this.render, this);

      this.toggleHideState = __bind(this.toggleHideState, this);

      this.initialize = __bind(this.initialize, this);
      return Article.__super__.constructor.apply(this, arguments);
    }

    Article.prototype.initialize = function() {
      this.$el.prepend('<input class="angel-hider" type="checkbox"/>');
      return this.listenTo(this.model, "change", this.render);
    };

    Article.prototype.events = {
      "click .angel-hider": "toggleHideState"
    };

    Article.prototype.toggleHideState = function() {
      return this.model.set("hidden", !this.model.get("hidden"));
    };

    Article.prototype.render = function() {
      return this.$el.toggle(!this.model.get("hidden"));
    };

    return Article;

  })(Backbone.View);

  _ref = $("li.inline-pic");
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    article = _ref[_i];
    view = new Article({
      el: article,
      model: new Backbone.Model({
        hidden: false
      })
    });
  }

}).call(this);
